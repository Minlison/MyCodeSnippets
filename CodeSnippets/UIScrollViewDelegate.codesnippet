<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>DELE UIScrollViewDelegate</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// This file is generated by dnsip, a tiny utility that extracts 
                 // all delegate methods from the UIKit framework. You find it on 
                // GitHub at https://github.com/Tintenklecks/IBDelegateCodesippets

#pragma mark - PROTOCOL UIScrollViewDelegate

#pragma mark - OPTIONAL methods for protocol UIScrollViewDelegate

// - (void)scrollViewDidScroll:(UIScrollView *)scrollView{ }                                               // any offset changes
// - (void)scrollViewDidZoom:(UIScrollView *)scrollView NS_AVAILABLE_IOS(3_2){ } // any zoom scale changes

// called on start of dragging (may require some time and or distance to move)
// - (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{ }
// called on finger up if the user dragged. velocity is in points/millisecond. targetContentOffset may be changed to adjust where the scroll view comes to rest
// - (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset NS_AVAILABLE_IOS(5_0){ }
// called on finger up if the user dragged. decelerate is true if it will continue moving afterwards
// - (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{ }

// - (void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView{ }   // called on finger up as we are moving
// - (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView{ }      // called when scroll view grinds to a halt

// - (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView{ } // called when setContentOffset/scrollRectVisible:animated: finishes. not called if not animating

// - (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView{ }     // return a view that will be scaled. if delegate returns nil, nothing happens
// - (void)scrollViewWillBeginZooming:(UIScrollView *)scrollView withView:(UIView *)view NS_AVAILABLE_IOS(3_2){ } // called before the scroll view begins zooming its content
// - (void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(UIView *)view atScale:(CGFloat)scale{ } // scale between minimum and maximum. called after any 'bounce' animations

// - (BOOL)scrollViewShouldScrollToTop:(UIScrollView *)scrollView{ }   // return a yes if you want to scroll to the top. if not defined, assumes YES
// - (void)scrollViewDidScrollToTop:(UIScrollView *)scrollView{ }      // called when scrolling animation finished. may be called immediately if already at top
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>342635D7-C560-41C4-88A9-34420651E0EC</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>Delegate with all methods of UIScrollViewDelegate</string>
	<key>IDECodeSnippetTitle</key>
	<string>Delegate for UIScrollViewDelegate</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
