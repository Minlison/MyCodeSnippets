<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>DELE UIPickerViewDelegate</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// This file is generated by dnsip, a tiny utility that extracts 
                 // all delegate methods from the UIKit framework. You find it on 
                // GitHub at https://github.com/Tintenklecks/IBDelegateCodesippets

#pragma mark - PROTOCOL UIPickerViewDataSource
#pragma mark - REQUIRED methods for protocol UIPickerViewDataSource

// returns the number of 'columns' to display.
// - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{ }

// returns the # of rows in each component..
// - (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component{ }
#pragma mark - PROTOCOL UIPickerViewDelegate
#pragma mark - OPTIONAL methods for protocol UIPickerViewDelegate

// returns width of column and height of row for each component.
// - (CGFloat)pickerView:(UIPickerView *)pickerView widthForComponent:(NSInteger)component{ }
// - (CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component{ }

// these methods return either a plain NSString, a NSAttributedString, or a view (e.g UILabel) to display the row for the component.
// for the view versions, we cache any hidden and thus unused views and pass them back for reuse.
// If you return back a different object, the old one will be released. the view will be centered in the row rect
// - (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component{ }
// - (NSAttributedString *)pickerView:(UIPickerView *)pickerView attributedTitleForRow:(NSInteger)row forComponent:(NSInteger)component NS_AVAILABLE_IOS(6_0){ } // attributed title is favored if both methods are implemented
// - (UIView *)pickerView:(UIPickerView *)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(UIView *)view{ }

// - (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component{ }
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>94DD8AF5-783D-48E6-9741-A31FFDA51B87</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>Delegate with all methods of UIPickerViewDelegate</string>
	<key>IDECodeSnippetTitle</key>
	<string>Delegate for UIPickerViewDelegate</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
